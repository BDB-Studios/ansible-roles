- name: Create jumphost instance
  ec2:
    key_name: "{{ vpc.ssh_key_name| default('default') }}"
    group:
      - "{{ 'jumphost-' + global_data.stack_name }}"
    instance_type: t2.nano
    image: "{{ vpc.ami }}"
    wait: yes
    volumes:
      - device_name: /dev/sda1
        volume_size: "{{ root_vol_size | default(50) }}"
        delete_on_termination: True
    exact_count: "{{ jumphost_count | default(1) }}"
    instance_tags: "{{ vpc.env_tags | combine({ 'Name': 'jumphost.' + global_data.stack_name }) }}"
    count_tag: "{{ { 'Name': 'jumphost.' + global_data.stack_name } }}"
    monitoring: yes
    vpc_subnet_id: "{{ public_subnets[0] }}"
    assign_public_ip: yes
    user_data: "{{ lookup('template', 'bootstrap.sh') }}"
  register: jump_host

- name: Add route 53 entries for jump in the public domain
  route53:
    command: create
    overwrite: yes
    record: "{{ 'jump.' + global_data.stack_name }}.{{ global_data.domain_name }}"
    zone: "{{ global_data.domain_name }}"
    type: A
    value: "{{ jump_host.tagged_instances[0].public_ip }}"
    ttl: 60

- name: Add hosts to jumphost group
  add_host: name="{{ 'jump.' + global_data.stack_name + '.' + global_data.domain_name }}" groups="jumphost, all_hosts"

- name: Add route 53 entries for jump in the private domain
  route53:
    command: create
    overwrite: yes
    record: "{{ 'jump.' + global_data.stack_name }}.internal"
    zone: "{{ global_data.stack_name }}.internal."
    hosted_zone_id: "{{ internal_dns_zone.set.zone_id }}"
    private_zone: yes
    type: A
    value: "{{ jump_host.tagged_instances[0].private_ip }}"
    ttl: 60



